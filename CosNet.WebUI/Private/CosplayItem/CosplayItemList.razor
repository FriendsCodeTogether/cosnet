@page "/cosplay/{CosplayId:guid}/cosplayitem"
@inject ICosplayItemService CosplayItemService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="cosplayitem-list-container">
    <div class="cosplayitem-list-top-row">
        <h1 class="title">Cosplay items</h1>
        <span class="flex-spacer"></span>
        <a class="cosplayitem-list-btn btn btn-primary rounded-pill" href="cosplay/@cosplayId.ToString()/cosplayitem/create">Add</a>
    </div>

    @if (cosplayItems == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="cosplayitem-list-title">
            Made items
        </div>
        @foreach (var item in cosplayItems)
        {
            <div class="cosplayitem-list-item" @onclick="() => ClickedToId(item.CosplayItemId)">
                <img src="https://placekitten.com/600/600" alt="Picture of the cosplay item" class="cosplaymadeitem-list-item-image" />
                <div class="cosplayitem-list-item-text">
                    <h4>@item.Name</h4>
                    <p>Price: &#9;Time:(worktime)</p>
                    <div class="cosplayitem-list-item-progressbar">
                        <div class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div class="cosplayitem-list-item-icon">
                    Icon
                </div>
            </div>
        }
    }
</div>

@code {
    private IEnumerable<CosplayItemDTO> cosplayItems;

    [Parameter]
    public Guid cosplayId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        cosplayItems = await CosplayItemService.GetCosplayItemsAsync();
    }

    public void ClickedToId(Guid cosplayItemId)
    {
        NavigationManager.NavigateTo($"cosplay/{cosplayId.ToString()}/cosplayitem/{cosplayItemId.ToString()}");
    }
}
